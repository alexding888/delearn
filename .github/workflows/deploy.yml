name: Deploy Build

on:
  # 手动触发事件
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: yarn install

    - name: Build project
      run: yarn build
      env:
        REACT_APP_PROJECT_ID:  ${{ secrets.WALLET_CONNECT_PROJECT_ID }} # WalletConnect 项目ID
        REACT_APP_BASE_URL:  ${{ env.API_BASE_URL }} 
        REACT_APP_NFT_BASE_URL:  ${{ env.CERT_BASE_URL }}
        REACT_APP_ANSWERS_KEY:  ${{ secrets.CHALLENGE_ANSWERS_KEY }}
        REACT_APP_SENTRY_KEY:  ${{ secrets.SENTRY_KEY }}

    - name: Archive Production Artifact
      run: |
        # Create a filename with date-time suffix
        ZIP_FILENAME=build-$(date +'%Y%m%d-%H%M%S').zip
        echo "ZIP_FILENAME=$ZIP_FILENAME" >> $GITHUB_ENV
        echo "Creating zip $ZIP_FILENAME"
        # Replace 'build/' with the directory of your build artifacts
        zip -r $ZIP_FILENAME build/
      shell: bash

    - name: SCP to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ env.SERVER_HOST }}
        username: ${{ env.SERVER_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}
        port: 22
        source: "*.zip"
        target: ${{ env.FILE_DIRECTORY }}

    - name: SSH remote commands
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ env.SERVER_HOST }}
        username: ${{ env.SERVER_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}
        port: 22
        script: |
          cd ${{ env.FILE_DIRECTORY }}
          unzip -o ${{ env.ZIP_FILENAME }}
          mv ${{ env.ZIP_FILENAME }} build